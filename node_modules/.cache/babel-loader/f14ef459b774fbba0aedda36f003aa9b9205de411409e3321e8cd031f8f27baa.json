{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wanda\\\\OneDrive\\\\Desktop\\\\Projects\\\\Investment Calculator React\\\\src\\\\components\\\\UserInput\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport '../../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form(props) {\n  _s();\n  const [newCurrentSavings, setNewCurrentSavings] = useState('');\n  const [newDuration, setNewDuration] = useState('');\n  const [newInterest, setNewInterest] = useState('');\n  const [newYearlyContributions, setNewYearlyContributions] = useState('');\n  const currentSavingsInputHandler = event => {\n    setNewCurrentSavings(event.target.value);\n  };\n  const yearSavingsInputHandler = event => {\n    setNewYearlyContributions(event.target.value);\n  };\n  const durationInputHandler = event => {\n    setNewDuration(event.target.value);\n  };\n  const interestInputHandler = event => {\n    setNewInterest(event.target.value);\n  };\n  const calculateHandler = event => {\n    event.preventDefault();\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +newCurrentSavings; // feel free to change the shape of this input object!\n    const yearlyContribution = +yearlyContributions; // as mentioned: feel free to change the shape...\n    const expectedReturn = +interest / 100;\n    const duration = +duration;\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        totalSavings: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    console.log(yearlyData);\n    props.onSaveData(yearlyData);\n    // do something with yearlyData ...\n  };\n\n  const resetHandler = () => {\n    console.log('Clicked!');\n    setEnteredCurrentSavings('');\n    setEnteredDuration('');\n    setEnteredInterest('');\n    setEnteredYearlyContributions('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: calculateHandler,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-savings\",\n          children: \"Current Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"current-savings\",\n          onChange: currentSavingsInputHandler,\n          value: enteredCurrentSavings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yearly-contribution\",\n          children: \"Yearly Savings ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"yearly-contribution\",\n          onChange: yearSavingsInputHandler,\n          value: enteredYearlyContributions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"expected-return\",\n          children: \"Expected Interest (%, per year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"expected-return\",\n          onChange: interestInputHandler,\n          value: enteredInterest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"duration\",\n          children: \"Investment Duration (years)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"duration\",\n          onChange: durationInputHandler,\n          value: enteredDuration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"reset\",\n        className: \"buttonAlt\",\n        onClick: resetHandler,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Form, \"IFecgmTpXa7zQgqFf/bFlvZRLcU=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Form","props","_s","newCurrentSavings","setNewCurrentSavings","newDuration","setNewDuration","newInterest","setNewInterest","newYearlyContributions","setNewYearlyContributions","currentSavingsInputHandler","event","target","value","yearSavingsInputHandler","durationInputHandler","interestInputHandler","calculateHandler","preventDefault","yearlyData","currentSavings","yearlyContribution","yearlyContributions","expectedReturn","interest","duration","i","yearlyInterest","push","year","totalSavings","console","log","onSaveData","resetHandler","setEnteredCurrentSavings","setEnteredDuration","setEnteredInterest","setEnteredYearlyContributions","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","enteredCurrentSavings","enteredYearlyContributions","enteredInterest","enteredDuration","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wanda/OneDrive/Desktop/Projects/Investment Calculator React/src/components/UserInput/Form.js"],"sourcesContent":["import React, { useState}  from \"react\";\r\nimport '../../index.css';\r\n\r\nfunction Form(props) {\r\n\r\n    const [newCurrentSavings, setNewCurrentSavings] = useState('');\r\n    const [newDuration, setNewDuration] = useState('');\r\n    const [newInterest, setNewInterest] = useState('');\r\n    const [newYearlyContributions, setNewYearlyContributions] = useState('');\r\n\r\n    const currentSavingsInputHandler = (event) => {\r\n        setNewCurrentSavings(event.target.value);\r\n    }\r\n    const yearSavingsInputHandler = (event) => {\r\n        setNewYearlyContributions(event.target.value);\r\n    }\r\n    const durationInputHandler = event => {\r\n        setNewDuration(event.target.value);\r\n    }\r\n    const interestInputHandler = event => {\r\n        setNewInterest(event.target.value);\r\n    }\r\n\r\n    const calculateHandler = (event) => {\r\n        event.preventDefault();\r\n        // Should be triggered when form is submitted\r\n        // You might not directly want to bind it to the submit event on the form though...\r\n    \r\n        const yearlyData = []; // per-year results\r\n      \r\n        let currentSavings = +newCurrentSavings; // feel free to change the shape of this input object!\r\n        const yearlyContribution = +yearlyContributions; // as mentioned: feel free to change the shape...\r\n        const expectedReturn = +interest / 100;\r\n        const duration = +duration;\r\n    \r\n        // The below code calculates yearly results (total savings, interest etc)\r\n        for (let i = 0; i < duration; i++) {\r\n          const yearlyInterest = currentSavings * expectedReturn;\r\n          currentSavings += yearlyInterest + yearlyContribution;\r\n          yearlyData.push({\r\n            // feel free to change the shape of the data pushed to the array!\r\n            year: i + 1,\r\n            yearlyInterest: yearlyInterest,\r\n            totalSavings: currentSavings,\r\n            yearlyContribution: yearlyContribution,\r\n          });\r\n        }\r\n        console.log(yearlyData);\r\n       props.onSaveData(yearlyData);\r\n        // do something with yearlyData ...\r\n      };\r\n\r\n      const resetHandler= () => {\r\n        console.log('Clicked!');\r\n        setEnteredCurrentSavings('');\r\n        setEnteredDuration('');\r\n        setEnteredInterest('');\r\n        setEnteredYearlyContributions('');\r\n    \r\n      }\r\n\r\n    \r\n    return (\r\n        <form onSubmit={calculateHandler} className=\"form\">\r\n        <div className=\"input-group\">\r\n          <p>\r\n            <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n            <input type=\"number\" id=\"current-savings\" onChange={currentSavingsInputHandler} value={enteredCurrentSavings}/>\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n            <input type=\"number\" id=\"yearly-contribution\" onChange={yearSavingsInputHandler} value={enteredYearlyContributions} />\r\n          </p>\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <p>\r\n            <label htmlFor=\"expected-return\">\r\n              Expected Interest (%, per year)\r\n            </label>\r\n            <input type=\"number\" id=\"expected-return\" onChange={interestInputHandler} value={enteredInterest}/>\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n            <input type=\"number\" id=\"duration\" onChange={durationInputHandler} value={enteredDuration}/>\r\n          </p>\r\n        </div>\r\n        <p className=\"actions\">\r\n          <button type=\"reset\" className=\"buttonAlt\" onClick={resetHandler}>\r\n            Reset\r\n          </button>\r\n          <button type=\"submit\" className=\"button\">\r\n            Calculate\r\n          </button>\r\n        </p>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}